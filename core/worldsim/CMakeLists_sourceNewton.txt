# Script to compile the farsa worldsim library (with compilation of Newton Game
# Dynamics)

# Including the directories with Newton Game Dynamics and QGLViewer
add_subdirectory(3rdParts/newton)
add_subdirectory(3rdParts/qglviewer)

# Adding OpenGL
find_package(OpenGL REQUIRED)

set(FARSAWORLDSIM_SRCS
	src/farsaglutils.cpp
	src/glcontextanddata.cpp
	src/graphicalmarkers.cpp
	src/guirendererscontainer.cpp
	src/libinitializer.cpp
	src/motorcontrollers.cpp
	src/ownerfollower.cpp
	src/phyballandsocket.cpp
	src/phybox.cpp
	src/phycompoundobject.cpp
	src/phycone.cpp
	src/phycylinder.cpp
	src/phyellipsoid.cpp
	src/phyepuck.cpp
	src/phyfixed.cpp
	src/phyheightfield.cpp
	src/phyhinge.cpp
	src/phyjoint.cpp
	src/phykhepera.cpp
	src/phymarxbot.cpp
	src/phyobject.cpp
	src/physlider.cpp
	src/physphere.cpp
	src/physuspension.cpp
	src/phyuniversal.cpp
	src/rendererscontainer.cpp
	src/renderworld.cpp
	src/sensorcontrollers.cpp
	src/singleir.cpp
	src/wentity.cpp
	src/wmesh.cpp
	src/wobject.cpp
	src/world.cpp
	src/worldhelpers.cpp
	src/worldsimutils.cpp)
set(FARSAWORLDSIM_HDRS
	include/farsaglutils.h
	include/glcontextanddata.h
	include/graphicalmarkers.h
	include/guirendererscontainer.h
	include/motorcontrollers.h
	include/ownerfollower.h
	include/phyballandsocket.h
	include/phybox.h
	include/phycompoundobject.h
	include/phycone.h
	include/phycylinder.h
	include/phyellipsoid.h
	include/phyepuck.h
	include/phyfixed.h
	include/phyheightfield.h
	include/phyhinge.h
	include/phyjoint.h
	include/phykhepera.h
	include/phymarxbot.h
	include/phyobject.h
	include/physlider.h
	include/physphere.h
	include/physuspension.h
	include/phyuniversal.h
	include/private/phyjointprivate.h
	include/private/phyobjectprivate.h
	include/private/worldprivate.h
	include/rendererscontainer.h
	include/renderingproxy.h
	include/renderworld.h
	include/sensorcontrollers.h
	include/singleir.h
	include/wentity.h
	include/wmatrix.h
	include/wmesh.h
	include/wobject.h
	include/world.h
	include/worldhelpers.h
	include/worldsimconfig.h
	include/worldsimexceptions.h
	include/worldsimutils.h
	include/wquaternion.h
	include/wvector.h)

# Adding resources and ui files
qt5_add_resources(FARSAWORLDSIM_SRCS textures/textures.qrc)

add_library(farsaworldsim SHARED ${FARSAWORLDSIM_SRCS} ${FARSAWORLDSIM_HDRS})
add_farsa_version(farsaworldsim)

# Specifying the the include directories: they are used both here and  exported
# by this library (so that targets linking this one will automatically import
# the include directories declared here)
target_include_directories(farsaworldsim PUBLIC
                           $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
                           $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/3rdParts>
                           $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/3rdParts/newton>
                           $<INSTALL_INTERFACE:include/farsa/worldsim>)

# Adding dependencies (they are also exported, so targets linking this one will
# automatically link libraries declared here)
target_link_libraries(farsaworldsim farsaconfiguration farsautilities farsanewton farsaqglviewer Qt5::Core Qt5::Xml Qt5::Concurrent Qt5::Widgets Qt5::OpenGL ${OPENGL_LIBRARIES})

# Defines to use. The first ones are used only when compiling the library, the
# second one both when compiling the library and targets using the library
target_compile_definitions(farsaworldsim PRIVATE FARSA_WSIM_BUILDING_DLL)
target_compile_definitions(farsaworldsim PUBLIC WORLDSIM_USE_NEWTON)

# Specifying the public headers of this target
set_property(TARGET farsaworldsim PROPERTY PUBLIC_HEADER ${FARSAWORLDSIM_HDRS})

# Installation paths
install(TARGETS farsaworldsim
        EXPORT farsa
        ARCHIVE DESTINATION lib/
        LIBRARY DESTINATION lib/
        PUBLIC_HEADER DESTINATION include/farsa/worldsim
        RUNTIME DESTINATION bin/)
